---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import { SITE_TITLE } from "../../consts";

const posts = await getCollection("blog");
posts.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead
            title={"Blog - " + SITE_TITLE}
            description="Read our latest blog posts about web development, Astro, and more."
        />
    </head>
    <body>
        <main class="pt-16">
            <a href="/" class="inline-flex items-center text-orange-400 hover:text-orange-300 transition-colors mb-6">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Back to home
            </a>
            
            <div class="mb-8">
                <h1 class="text-4xl font-bold text-white mb-4">Blog</h1>
                <p class="text-gray-300 text-lg">Thoughts, tutorials, and insights about web development and technology.</p>
            </div>
            
            <div class="space-y-8">
                {posts.map((post) => (
                    <article class="bg-gray-900 rounded-lg p-6 border border-gray-700 hover:border-gray-600 transition-colors">
                        <header class="mb-4">
                            <h2 class="text-2xl font-semibold text-white mb-2">
                                <a href={`/blog/${post.id}`} class="hover:text-orange-400 transition-colors">
                                    {post.data.title}
                                </a>
                            </h2>
                            <div class="flex items-center text-gray-400 text-sm">
                                <time datetime={post.data.publishDate.toISOString()}>
                                    {post.data.publishDate.toLocaleDateString('en-US', { 
                                        year: 'numeric', 
                                        month: 'long', 
                                        day: 'numeric' 
                                    })}
                                </time>
                                {post.data.updatedDate && (
                                    <span class="ml-4">
                                        Updated {post.data.updatedDate.toLocaleDateString('en-US', { 
                                            year: 'numeric', 
                                            month: 'long', 
                                            day: 'numeric' 
                                        })}
                                    </span>
                                )}
                            </div>
                        </header>
                        
                        {post.data.description && (
                            <p class="text-gray-300 mb-4">{post.data.description}</p>
                        )}
                        
                        <a 
                            href={`/blog/${post.id}`} 
                            class="inline-flex items-center text-orange-400 hover:text-orange-300 transition-colors text-sm font-medium"
                        >
                            Read more
                            <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                        </a>
                    </article>
                ))}
            </div>
            
            {posts.length === 0 && (
                <div class="text-center py-12">
                    <p class="text-gray-400 text-lg">No blog posts yet. Check back soon!</p>
                </div>
            )}
        </main>
    </body>
</html>